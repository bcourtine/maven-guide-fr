<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="flex-dev" lang="fr">
  <title>Développement avec Flexmojos</title>

  <section id="flex-dev-sect-intro">
    <title>Introduction</title>

    <para>Ce chapitre propose un aperçu du projet Flexmojos pour les personnes intéressées par l'utilisation de Maven pour développer des applications et des bibliothèques Flex.</para>
  </section>

  <section id="flex-dev-sect-config-build">
    <title>Configuration de l'environnement de build pour Flexmojos</title>

    <para>Avant que vous ne tentiez de compiler des librairies et des applications Flex avec Maven, vous devrez réaliser deux tâches de configuration :</para>

    <itemizedlist>
      <listitem>
        <para>Configurez vos paramètres Maven afin de référencer un dépôt qui contienne le framework Flex</para>
      </listitem>

      <listitem>
        <para>Ajoutez Flash Player à votre PATH pour pouvoir exécuter les tests unitaires Flex</para>
      </listitem>

      <listitem>
        <para>(Optionnel) Configurez vos paramètres Maven pour inclure le groupe de plugin de Sonatype</para>
      </listitem>
    </itemizedlist>

    <section id="flex-dev-sect-referencing-repo-with-flex">
      <title>Faire référence à un dépôt contenant le Framework Flex</title>

      <para>Pour configurer votre environnement Maven pour utiliser Flexmojos, vous avez deux
      options : vous pouvez faire référence au dépôt Flexmojos de Sonatype directement dans le fichier
      <filename>pom.xml</filename>, ou vous pouvez installer Nexus et ajouter le dépôt Sonatype pour
      Flexmojos en tant que dépôt mandataire (proxy) dans votre propre gestionnaire de dépôts. Si l'option la
      plus simple consiste à faire référence directement au dépôt, télécharger et installer Nexus
      vous procurera le contrôle et la flexibilité dont vous avez besoin pour cacher et gérer les
      artefacts générés par vos propres builds. Si vous souhaitez juste commencer rapidement avec
      Flexmojos, lisez ci-dessous la <xref linkend="flex-dev-sect-direct-repo"/>.
      Si ce qui vous itéresse est une solution à long terme qui peut être déployée pour servir de
      support à une équipe de développement, allez à la <xref linkend="flex-dev-sect-proxy-nexus"/>.</para>

      <para>Si votre organisation utilise déjà la solution Nexus de Sonatype en tant que mandataire
      pour les dépôts distants, vous avez probablement un fichier 
      <filename>~/.m2/settings.xml</filename> personnalisé qui pointe vers un seul groupe Nexus. 
      Si telle est votre situation, vous devrez ajouter au groupe référencé par votre équipe de 
      développement un dépôt mandataire pour le groupe du dépôt de Flexmojos avec
      l'adresse <ulink url="${flexmojos.repository}">${flexmojos.repository}</ulink>. Ajouter un
      dépôt mandataire pour ce groupe distant et puis ajouter ce groupe au groupe public de votre
      installation Nexus, donnera aux clients de votre instance Nexus un accès aux artefacts
      Sonatype <varname>repository.sonatype.org</varname>.
    </para>

      <section id="flex-dev-sect-direct-repo">
        <title>Faire référence depuis le POM au dépôt Flexmojos de Sonatype</title>

        <para>Flexmojos dépend de certains artefacts qui ne sont actuellement pas disponibles
        depuis le dépôt central Maven. Ces artefacts sont disponibles depuis un dépôt hébergé
        par Sonatype. Pour utiliser Flexmojos, vous devrez faire référence à ce dépôt depuis
        le <filename>pom.xml</filename> de votre projet. dans ce but, ajoutez l'élément
        <sgmltag>repositories</sgmltag> indiqué dans <xref linkend="ex-flex-dev-repository"/> dans le
        fichier <filename>pom.xml</filename> de votre projet.</para>

        <example id="ex-flex-dev-repository">
          <title>Ajouter une référence au dépôt Flexmojos de Sonatype au sein du POM</title>

          <programlisting>&lt;project&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
  &lt;groupId&gt;test&lt;/groupId&gt;
  &lt;artifactId&gt;test&lt;/artifactId&gt;
  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;packaging&gt;pom&lt;/packaging&gt;
  
  &lt;modules&gt;
    &lt;module&gt;swc&lt;/module&gt;
    &lt;module&gt;swf&lt;/module&gt;
    &lt;module&gt;war&lt;/module&gt;
  &lt;/modules&gt;

  <emphasis>&lt;repositories&gt;
    &lt;repository&gt;
      &lt;id&gt;flexmojos&lt;/id&gt;
      &lt;url&gt;${flexmojos.repository}&lt;/url&gt;
    &lt;/repository&gt;
  &lt;/repositories&gt;</emphasis>

&lt;/project&gt;
</programlisting>
        </example>

        <para>Le XML illustré dans <xref linkend="ex-flex-dev-repository"/>, ajoute ce dépôt à la 
        liste des dépôts consultés par Maven quand il tente de télécharger les artefacts et
        les plugins.</para>
      </section>

      <section id="flex-dev-sect-proxy-nexus">
        <title>Utiliser Nexus comme dépôt mandataire de Flexmojos de Sonatype</title>

        <para>Au lieu de pointer directement vers le dépôt Flexmojos de Sonatype,
        Sonatype recommande d'installer un gestionnaire de dépôt et de le mettre
        en proxy du dépôt public de Sonatype. Quand vous mettez en place un
        proxy d'un dépôt distant avec un gestionnaire de dépôt comme Nexus,
        vous gagnez un niveau supplémentaire de contrôle et de stabilité qu'il
        n'est pas possible d'atteindre lorsque votre build dépend directement
        de ressources externes. En plus de ce contrôle et de cette stabilité,
        un gestionnaire de dépôt fournit aussi une cible pour le déploiement
        des artefacts binaires produits par vos builds. Les instructions pour
        télécharger, installer et configurer Nexus sont disponibles dans le
        <ulink
        url="http://www.sonatype.com/books/nexus-book/reference/install.html">Installation
        chapter in Repository Management with Nexus</ulink>. Une fois Nexus
        installé et démarré, effectuez les opérations suivantes pour lui ajouter
        une fonction de mandataire du dépôt public de Sonatype.</para>

        <para>Pour ajouter un nouveau proxy d'un dépôt, cliquez sur le lien
        <guimenuitem>Repositories</guimenuitem> sous
        <guisubmenu>Views/Repositories</guisubmenu> dans le menu
        <guimenu>Nexus</guimenu> de la partie gauche de l'interface
        utilisateur de Nexus. Ce click sur <guimenuitem>Repositories</guimenuitem>
        va charger le panneau <guilabel>Repositories</guilabel>. Dans ce panneau
        <guilabel>Repositories</guilabel>, cliquez sur le bouton
        <guibutton>Add..</guibutton> et sélectionnez Proxy Repository comme le
        montre la <xref linkend="fig-flex-dev-add-proxy-repos" />.</para>

        <figure id="fig-flex-dev-add-proxy-repos">
          <title>Ajout du proxy d'un dépôt sur Sonatype Nexus</title>

          <mediaobject>
            <imageobject role="web">
              <imagedata fileref="figs/web/flex-dev-nexus-add-proxy.png" />
            </imageobject>

            <imageobject role="print">
              <imagedata align="center"
                         fileref="figs/print/flex-dev-nexus-add-proxy.pdf"
                         scalefit="0" width="100%" />
            </imageobject>
          </mediaobject>
        </figure>

        <para>Une fois que vous avez créé ce nouveau dépôt proxy, il vous faut
        le configurer pour qu'il pointe vers le dépôt public Flexmojos de
        Sonatype. Sélectionnez ce nouveau dépôt puis l'onglet de
        Configuration en bas de la fenêtre. Remplissez les champs suivants avec les
        valeurs indiquées comme le montre la <xref
        linkend="fig-flex-dev-sonatype-public-proxy" />.</para>

        <itemizedlist>
          <listitem>
            <para>Repository ID prend pour valeur "sonatype-flexmojos"</para>
          </listitem>

          <listitem>
            <para>Repository Name prend pour valeur "Sonatype Flexmojos Proxy"</para>
          </listitem>

          <listitem>
            <para>La "Remote Storage Location" prend pour valeur <ulink
            url="${flexmojos.repository}">${flexmojos.repository}</ulink></para>
          </listitem>
        </itemizedlist>

        <figure id="fig-flex-dev-sonatype-public-proxy">
          <title>Configuration du dépôt Sonatype Flexmojos Proxy</title>

          <mediaobject>
            <imageobject role="web">
              <imagedata fileref="figs/web/flex-dev-nexus-sonatype-proxy.png" />
            </imageobject>

            <imageobject role="print">
              <imagedata align="center"
                         fileref="figs/print/flex-dev-nexus-sonatype-proxy.pdf"
                         scalefit="0" width="100%" />
            </imageobject>
          </mediaobject>
        </figure>

        <para>Une fois que vous avez rempli les champs présentés dans <xref
        linkend="fig-flex-dev-sonatype-public-proxy" /> cliquez sur le bouton
        <guibutton>Save</guibutton> pour enregistrer ce dépôt et commencer à l'utiliser
        comme proxy du dépôt Sonatype Flexmojos. Nexus est fourni avec un groupe
        public de dépôts, qui regroupe plusieurs dépôts en un seul point d'entrée
        pour les clients Maven. Pour compléter la configuration de ce nouveau
        dépôt mandataire, vous devez ajouter celui-ci au groupe Nexus <varname>Public Repositories</varname>.
        Pour ce faire, allez à la liste des dépôts qui devrait être visible dans le haut du panneau
        <guilabel>Repositories</guilabel> comme le montre <xref linkend="fig-flex-dev-sonatype-public-proxy" />.
        Cliquez sur le groupe <guilabel>Public Repositories</guilabel> puis sur l'onglet
        Configuration en bas du panneau Repository. Cliquer sur l'onglet Configuration fait apparaître
        le formulaire <guilabel>Group configuration</guilabel> comme le montre <xref
        linkend="fig-flex-dev-adding-sonatype-to-group" />.</para>

        <figure id="fig-flex-dev-adding-sonatype-to-group">
          <title>Ajout du proxy de Sonatype Flexmojos au groupe <varname>Public Repositories</varname></title>

          <mediaobject>
            <imageobject role="web">
              <imagedata fileref="figs/web/flex-dev-nexus-sonatype-to-group.png" />
            </imageobject>

            <imageobject role="print">
              <imagedata align="center"
                         fileref="figs/print/flex-dev-nexus-sonatype-to-group.pdf"
                         format="PDF" scalefit="0" width="100%" />
            </imageobject>
          </mediaobject>
        </figure>

        <para>Pour ajouter le <guilabel>Sonatype Public Proxy</guilabel> au groupe
        <guilabel>Public Repositories</guilabel> faites un glisser/déposer du dépôt
        <guilabel>Sonatype Public Proxy</guilabel> de la liste
        <guilabel>Available Repositories</guilabel> dans la liste
        <guilabel>Ordered Group Repositories</guilabel>. Cliquez sur le bouton
        <guibutton>Save</guibutton> et vous aurez ajouté avec succès un proxy
        du dépôt Sonatype Flexmojos à votre installation de Nexus.
        À chaque fois qu'un client va demander un artefact à ce groupe de dépôt, si
        Nexus ne l'a pas déjà mis en cache il va le demander au dépôt
        Sonatype Flexmojos situé à <ulink
        url="${flexmojos.repository}">${flexmojos.repository}</ulink>. Votre
        installation de Nexus maintient un cache local de tous les artefacts
        récupérés depuis le dépôt Sonatype Flexmojos. Ce cache local vous donne
        plus de contrôle et rend l'environnement de build plus stable. Si vous
        montez une équipe de développeurs qui dépend des artefacts du dépôt
        public de Sonatype, vous aurez ainsi un environnement de build
        autonome qui ne dépendra pas de la disponibilité du dépôt de
        Sonatype une fois que les artefacts nécessaires auront été mis en
        cache par votre instance de Nexus.</para>

        <para>La dernière étape consiste à faire pointer votre installation de
        Maven vers l'instance de Nexus que vous venez de configurer. Vous
        devez donc modifier votre configuration Maven pour qu'il utilise
        le groupe du dépôt Nexus comme miroir pour tous les dépôts. Pour cela,
        vous devez éditer votre fichier <filename>~/.m2/settings.xml</filename>
        et lui ajouter le XML suivant.</para>

        <example id="ex-flex-dev-settings-local-nexus">
          <title>Configuration de l'instance Nexus dans le fichier settings.xml</title>

          <programlisting>&lt;settings&gt;
  &lt;mirrors&gt;
    &lt;mirror&gt;
      &lt;!--This sends everything else to /public --&gt;
      &lt;id&gt;nexus&lt;/id&gt;
      &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
      &lt;url&gt;http://localhost:8081/nexus/content/groups/public&lt;/url&gt;
    &lt;/mirror&gt;
  &lt;/mirrors&gt;
  &lt;profiles&gt;
    &lt;profile&gt;
      &lt;id&gt;nexus&lt;/id&gt;
      &lt;!—-Enable snapshots for the built in central repo to direct --&gt;
      &lt;!--all requests to nexus via the mirror --&gt;
      &lt;repositories&gt;
        &lt;repository&gt;
          &lt;id&gt;central&lt;/id&gt;
          &lt;url&gt;http://central&lt;/url&gt;
          &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
          &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
        &lt;/repository&gt;
      &lt;/repositories&gt;
     &lt;pluginRepositories&gt;
        &lt;pluginRepository&gt;
          &lt;id&gt;central&lt;/id&gt;
          &lt;url&gt;http://central&lt;/url&gt;
          &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
          &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
        &lt;/pluginRepository&gt;
      &lt;/pluginRepositories&gt;
    &lt;/profile&gt;
  &lt;/profiles&gt;
  &lt;activeProfiles&gt;
    &lt;!—-make the profile active all the time --&gt;
    &lt;activeProfile&gt;nexus&lt;/activeProfile&gt;
  &lt;/activeProfiles&gt;
&lt;/settings&gt;
</programlisting>
        </example>

        <para>Ce fichier XML configure Maven pour qu'il aille
        consulter le groupe de dépôts publics plutôt que les 
        dépôts d'artefacts et de plugins configurés par ailleurs.
        C'est une façon simple de garantir que toute demande
        d'artefact passe par le Nexus installé.</para>
      </section>
    </section>

    <section id="flex-dev-sect-configuring-unit-tests">
      <title>Configuration de l'environnement pour les tests Flex Unit</title>

      <para>Flexmojos s'attend à pouvoir lancer le lecteur autonome Flash Play
      pour l'exécution des tests unitaires. Pour que cela soit opérationnel, il vous faudra ou 
      bien ajouter le lecteur Flash Player à votre PATH, or alors indiquer la localisation de
      l'exécutable Flash Player lors du build en utilisant l'option <varname>-DflashPlayer.command</varname>.
      Au moment de l'exécution d'un test unitaire, Flex Mojos s'attend à pouvoir lancer l'exécutable
      Flash Player en fonction de la platforme :</para>

      <variablelist>
        <varlistentry>
          <term>Microsoft Windows</term>

          <listitem>
            <para>FlexMojos tentera de lancer le binaire <filename>FlashPlayer.exe</filename>.
	           Pour permettre l'exécution des tests unitaires, ajoutez à votre PATH le répertoire contenant
            <filename>FlashPlayer.exe</filename>,  ou alors précisez la localisation du binaire
            <filename>FlashPlayer.exe</filename> via l'option de ligne de commande Maven 
            <varname>-DflashPlayer.command=${filepath}</varname>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Macintosh OSX</term>

          <listitem>
            <para>FlexMojos tentera de lancer l'application "Flash Player". 
	          Pour permettre l'exécution des tests unitaires, ajoutez le répertoire contenant "Flash Player" à votre PATH, 
            ou alors précisez le chemin de l'exécutable via l'option de ligne de commande Maven <varname>-DflashPlayer.command=${filepath}</varname>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Unix (Linux, Solaris, etc.)</term>

          <listitem>
            <para>FlexMojos tentera de lancer l'exécutable
            <filename>flashplayer</filename>. Pour permettre l'exécution des tests unitaires, ajoutez le répertoire contenant 
            <filename>flashplayer</filename> à votre PATH, ou alors précisez le chemin de l'exécutable via l'option de ligne de commande Maven
            <varname>-DflashPlayer.command=${filepath}</varname>.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <note>
        <para>Sur une machine Linux, il vous faudra installer un serveur X Virtual Frame Buffer 
        (Xvfb) pour pouvoir lancer les tests unitaires sans interface graphique. Pour plus 
        d'information, suivez le lien <ulink
        url="http://en.wikipedia.org/wiki/Xvfb">Xvfb</ulink>.</para>
      </note>

      <para>Si vous avez déjà développé des applications Flash avec Adobe Flash
      CS4, Adobe Flex Builder ou si vous visionnez du contenu flash dans un navigateur,
      alors il est probable que Flash Player soit installé sur votre station de travail. 
	  Bien qu'il soit possible de configurer Maven pour qu'il utilise l'un de ces players
      durant la campagne de tests unitaires Flex, vous préférerez vous assurer que vous lancez bien
      la version debug de Flash Player. Pour minimiser les risques d'incompatibilité, 
      vous devriez télécharger l'un des Flash Players listés ci-dessous et l'installer sur votre
      station de travail. Pour télécharger Flash Player selon l'environnement :</para>

      <itemizedlist>
        <listitem>
          <para>Windows : <ulink
          url="http://download.macromedia.com/pub/flashplayer/updaters/10/flashplayer_10_sa_debug.exe">http://download.macromedia.com/pub/flashplayer/updaters/10/
          flashplayer_10_sa_debug.exe</ulink></para>
        </listitem>

        <listitem>
          <para>Mac OSX : <ulink
          url="http://download.macromedia.com/pub/flashplayer/updaters/10/flashplayer_10_sa_debug.app.zip">http://download.macromedia.com/pub/flashplayer/updaters/10/
          flashplayer_10_sa_debug.app.zip</ulink></para>
        </listitem>

        <listitem>
          <para>Linux : <ulink url="http://download.macromedia.com/pub/flashplayer/updaters/10/flash_player_10_linux_dev.tar.gz">http://download.macromedia.com/pub/flashplayer/updaters/10/
          flash_player_10_linux_dev.tar.gz</ulink></para>
        </listitem>
      </itemizedlist>

      <para>Lancez la commande suivante pour installer ce player et l'ajouter à votre PATH sur une machine OSX :</para>

      <screen>$ <command>wget http://download.macromedia.com/pub/flashplayer/updaters/10/\
flashplayer_10_sa_debug.app.zip</command>
$ <command>unzip flashplayer_10_sa_debug.app.zip</command>
$ <command>sudo cp -r Flash\ Player.app /Applications/</command>
$ <command>export PATH=/Applications/Flash\ Player.app/Contents/MacOS:${PATH}</command></screen>

      <para>Plutôt que d'ajouter en ligne de commande le chemin de Flash Player à votre PATH, vous devriez configurer votre environnement. 
      Sur OSX, il vous suffit d'ajouter cette dernière commande d'export à votre fichier <filename>~/.bash_profile</filename>.</para>
    </section>

    <section id="flex-dev-sect-plugin-group">
      <title>Ajouter FlexMojos aux groupes de plugins de votre configuration Maven </title>

      <para>Si vous exécutez des goals FlexMojos en ligne de commande, vous trouverez
      qu'il est plus pratique d'ajouter les groupes de plugins Sonatype à votre configuration Maven.
 	  Pour cela, éditez le fichier <filename>~/.m2/settings.xml</filename>
      et ajoutez les groupes de plugins suivants :</para>

      <example>
        <title>Ajouter les plugins Sonatype à votre configuration Maven</title>

        <programlisting>&lt;pluginGroups&gt;
  &lt;pluginGroup&gt;com.sonatype.maven.plugins&lt;/pluginGroup&gt;
  &lt;pluginGroup&gt;org.sonatype.plugins&lt;/pluginGroup&gt;
&lt;/pluginGroups&gt;
</programlisting>
      </example>

      <para>Une fois que vous avez ajouté ces groupes de plugins à votre configuration Maven, 
      vous pouvez invoquer les goals FlexMojos en utilisant le préfixe de plugin <varname>flexmojos</varname>. 
      Sans cette configuration, invocation du goal <varname>flexbuilder</varname> nécessite la 
      ligne de commande suivante :</para>

      <screen>$ <command>mvn org.sonatype.flexmojos:flexmojos-maven-plugin:3.2.0:flexbuilder</command></screen>

      <para>Avec le groupe org.sonatype.plugins dans votre configuration Maven, le même goal peut être invoqué comme suit :</para>

      <screen>$ <command>mvn flexmojos:flexbuilder</command></screen>
    </section>
  </section>

  <section id="flex-dev-sect-creating-with-archetype">
    <title>Création d'un projet FlexMojos à partir d'un archétype</title>

    <para>Flexmojos a un ensemble d'archétypes qui peuvent être utilisés rapidement pour créer 
    un nouveau projet Flex. Les archétypes ci-dessous sont tous dans le groupe 
    <package>org.sonatype.flexmojos</package> avec version 
    <varname>${flexmojos.version}</varname> :</para>

    <variablelist>
      <varlistentry>
        <term>flexmojos-archetypes-library</term>

        <listitem>
          <para>Crée un simple projet de bibliothèque Flex qui produit un artefact SWC</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos-archetypes-application</term>

        <listitem>
          <para>Crée un simple projet Flex qui produit un artefact SWF</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos-archetypes-modular-webapp</term>

        <listitem>
          <para>Crée un projet multimodule qui présente un projet qui 
          produit un SWC qui est consommé par un projet pour produire un SWF
          lequel est affiché dans uen application web produite par un dernier projet.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section id="flex-dev-sect-library-archetype">
      <title>Création d'une bibliothèque Flex</title>

      <para>Pour créer un projet de bibliothèque Flex, il suffit d'exécuter la ligne de commande suivante :</para>

      <screen>$ <command>mvn archetype:generate \
  -DarchetypeRepository=http://repository.sonatype.org/content/groups/public \
  -DarchetypeGroupId=org.sonatype.flexmojos \
  -DarchetypeArtifactId=flexmojos-archetypes-library \
  -DarchetypeVersion=${flexmojos.version}</command>
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'archetype'.
[INFO] com.sonatype.maven.plugins: checking for updates from central
...
[INFO] [archetype:generate]
[INFO] Generating project in Interactive mode
[INFO] Archetype defined by properties
...
Define value for groupId: : <command>org.sonatype.test</command>
Define value for artifactId: : <command>sample-library</command>
Define value for version:  1.0-SNAPSHOT: : <command>1.0-SNAPSHOT</command>
Define value for package:  org.sonatype.test: : <command>org.sonatype.test</command> 
Confirm properties configuration:
groupId: org.sonatype.test
artifactId: sample-library
version: 1.0-SNAPSHOT
package: org.sonatype.test
 Y: : <command>Y</command>[INFO] Parameter: groupId, Value: org.sonatype.test
[INFO] Parameter: packageName, Value: org.sonatype.test
[INFO] Parameter: basedir, Value: /Users/Tim
[INFO] Parameter: package, Value: org.sonatype.test
[INFO] Parameter: version, Value: 1.0-SNAPSHOT
[INFO] Parameter: artifactId, Value: sample-library
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
</screen>

      <para>En regardant dans le répertoire <varname>sample-library/</varname>, vous verrez
      que le projet présente une arborescence comme dans la <xref
      linkend="fig-flex-dev-library-archetype-fs" />.</para>

      <figure id="fig-flex-dev-library-archetype-fs">
        <title>Arborescence de l'archétype de bibliothèque Flexmojo</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/flex-dev-arche-simple-lib-fs.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/flex-dev-arche-simple-lib-fs.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Le produit du seul archétype de bibliothèque Flex contient
      trois fichiers : un POM, un fichier source et un fichier de test unitaire. Regardons chacun de ces
      trois fichiers. Premièrement, le Project Object Model (POM).</para>

      <example id="fig-flex-dev-simple-lib-pom">
        <title>POM d'un archétype pour projet de bibliothèque Flex</title>

        <programlisting>&lt;project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/maven-v4_0_0.xsd"&gt;

  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

  &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;
  &lt;artifactId&gt;sample-library&lt;/artifactId&gt;
  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;packaging&gt;swc&lt;/packaging&gt;

  &lt;name&gt;test Flex&lt;/name&gt;

  &lt;build&gt;
    &lt;sourceDirectory&gt;src/main/flex&lt;/sourceDirectory&gt;
    &lt;testSourceDirectory&gt;src/test/flex&lt;/testSourceDirectory&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
        &lt;artifactId&gt;flexmojos-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;${flexmojos.version}&lt;/version&gt;
        &lt;extensions&gt;true&lt;/extensions&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;

  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;com.adobe.flex.framework&lt;/groupId&gt;
      &lt;artifactId&gt;flex-framework&lt;/artifactId&gt;
      &lt;version&gt;3.2.0.3958&lt;/version&gt;
      &lt;type&gt;pom&lt;/type&gt;
    &lt;/dependency&gt;

    &lt;!-- flexmojos Unit testing support --&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
      &lt;artifactId&gt;flexmojos-unittest-support&lt;/artifactId&gt;
      &lt;version&gt;${flexmojos.version}&lt;/version&gt;
      &lt;type&gt;swc&lt;/type&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;

&lt;/project&gt;</programlisting>
      </example>

      <para>L'<xref linkend="fig-flex-dev-simple-lib-pom" /> est très simple, le 
      point clé de ce POM c'est la configuration de <varname>flexmojos-maven-plugin</varname>
      qui positionne <varname>extensions</varname> à
      <varname>true</varname>. Cette configuration personnalise le cycle de vie pour le packaging
      <varname>swc</varname> qui est défini dans le plugin
      <varname>flexmojos-maven-plugin</varname>. L'archétype inclut alors
      la dépendance <varname>flex-framework</varname> ainsi que la dépendance de type test
      <varname>flexmojos-unittest-support</varname>.
      La dépendance <varname>flex-framework</varname> est un POM qui contient
      les références vers les bibliothèques et les ressources nécessaires à la compilation une application Flex.</para>

      <para>Dans l'<xref linkend="fig-flex-dev-simple-lib-pom" />, le packaging
      est primordial. Le type de packaging d'un POM contrôle le cycle de vie qui est utilisé
      pour produire le résultat de build. La valeur <varname>swc</varname> dans 
      l'élément packaging est l'indice qui indique le cycle de vie
      spécifique Flex dont les spécificités sont fournies par le plugin
      <varname>flexmojos-maven-plugin</varname>. L'autre partie importante de ce
      POM est l'élément <sgmltag>build</sgmltag> qui précise l'emplacement du code source Flex
      ainsi que celui des tests unitaires. Maintenant, jetons un coup d'oeil à
      l'<xref linkend="ex-flex-dev-lib-as" /> qui contient l'exemple de code 
      d'ActionScript créé par l'archétype.</para>

      <example id="ex-flex-dev-lib-as">
        <title>App, l'application exemple de l'archétype de bibliothèque Flex</title>

        <programlisting>package org.sonatype.test {
  public class App {
    public static function greeting(name:String):String {
      return "Hello, " + name;
    }
  }
}
</programlisting>
      </example>

      <para>Bien que ce code soit très simple, il apporte un exemple et un repère immédiat :
      "Ecriver le reste du code ici". Bien qu'il puisse sembler idiot
      de tester un code aussi simple, un exemple de test nommé
      <filename>TestApp.as</filename> est proposé dans le répertoire
      <filename>src/test/flex</filename>. Ce test est présenté dans
      l'<xref linkend="ex-flex-dev-test-app" />.</para>

      <example id="ex-flex-dev-test-app">
        <title>Test unitaire de la classe App pour l'archétype de bibliothèque Flex</title>

        <programlisting>package org.sonatype.test {

  import flexunit.framework.TestCase;

  public class TestApp extends TestCase {

    /**
     * Tests our greeting() method
     */
    public function testGreeting():void {
      var name:String = "Buck Rogers";
      var expectedGreeting:String = "Hello, Buck Rogers";

      var result:String = App.greeting(name);
      assertEquals("Greeting is incorrect", expectedGreeting, result);
    }
  }
}
</programlisting>
      </example>

      <para>Pour exécuter ce build, allez au répertoire du projet <varname>sample-library</varname> 
      et lancez la commande : run mvn install.</para>

      <screen>$ <command>mvn install</command> 
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building sample-library Flex
[INFO]    task-segment: [install]
[INFO] ------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] [flexmojos:compile-swc]
[INFO] flexmojos ${flexmojos.version} - GNU GPL License (NO WARRANTY) - \
See COPYRIGHT file
[WARNING] Nothing expecified to include.  Assuming source and resources folders.
[INFO] Flex compiler configurations:
-compiler.headless-server=false 
-compiler.keep-all-type-selectors=false 
-compiler.keep-generated-actionscript=false 
-compiler.library-path ~/.m2/repository/com/adobe/flex/framework/flex/\
3.2.0.3958...
-compiler.namespaces.namespace http://www.adobe.com/2006/mxml 
        target/classes/configs/mxml-manifest.xml 
-compiler.optimize=true 
-compiler.source-path src/main/flex 
...
[INFO] [resources:testResources]
[WARNING] Using platform encoding (MacRoman actually) to copy filtered \
        resources, i.e.  build is platform dependent!
[INFO] skip non existing resourceDirectory src/test/resources
[INFO] [flexmojos:test-compile]
[INFO] flexmojos ${flexmojos.version} - GNU GPL License (NO WARRANTY) - \
See COPYRIGHT file
[INFO] Flex compiler configurations:
-compiler.include-libraries ~/.m2/repository/org/sonatype/flexmojos/\
        flexmojos-unittest-support...
-compiler.keep-generated-actionscript=false 
-compiler.library-path ~/.m2/repository/com/adobe/flex/framework/flex
        3.2.0.3958/flex-3.2.0.... 
-compiler.optimize=true 
-compiler.source-path src/main/flex target/test-classes src/test/flex 
-compiler.strict=true 
-target-player 9.0.0 
-use-network=true 
-verify-digests=true -load-config= 
[INFO] Already trust on target/test-classes/TestRunner.swf
[INFO] [flexmojos:test-run]
[INFO] flexmojos ${flexmojos.version} - GNU GPL License (NO WARRANTY) - \
See COPYRIGHT file
[INFO] flexunit setup args: null
[INFO] ------------------------------------------------------------------------
[INFO] Tests run: 1, Failures: 0, Errors: 0, Time Elpased: 0 sec
[INFO] [install:install]
</screen>

      <note>
        <para>Pour pouvoir exécuter les tests unitaires Flex il vous faudra configurer votre variable
        d'environnement PATH afin d'inclure le lecteur Flash Player. Pour plus d'information concernant
        la configuration de FlexMojos pour les tests unitaires, se référer à la <xref
        linkend="flex-dev-sect-configuring-unit-tests" />.</para>
      </note>

      <para>Quand vous exécutez la commande <command>mvn install</command> pour ce projet, vous
      pouvez noter dans l'output que Maven et le plugin Flexmojos prennent en charge
      la gestion de toutes les bibliothèques et dépendances pour le compilateur Flex.
      De la même façon que Maven est excellent pour aider les développeurs Java à gérer le contenu 
      d'un classpath Java, Maven peut aider les développeurs Flex à gérer la complexité de
      génération des paths. Vous avez peut-être été surpris quand votre projet Flexmojos a démarré
      un navigateur web ou un lecteur Flash Player et l'a utilisé pour exécuter l'application
      TestApp construite à partir de votre code source.</para>
    </section>

    <section id="flex-dev-sect-application-archetype">
      <title>Création d'une application Flex</title>

      <para>Pour créer une application Flex à partir d'un archétype Maven, lancer la commande suivante :</para>

      <screen>$ <command>mvn archetype:generate \
  -DarchetypeRepository=http://repository.sonatype.org/content/groups/public \
  -DarchetypeGroupId=org.sonatype.flexmojos \
  -DarchetypeArtifactId=flexmojos-archetypes-application \
  -DarchetypeVersion=${flexmojos.version}</command>
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'archetype'.
[INFO] com.sonatype.maven.plugins: checking for updates from central
...
[INFO] [archetype:generate]
[INFO] Generating project in Interactive mode
[INFO] Archetype defined by properties
...
Define value for groupId: : <command>org.sonatype.test</command>
Define value for artifactId: : <command>sample-application</command>
Define value for version:  1.0-SNAPSHOT: : <command>1.0-SNAPSHOT</command>
Define value for package:  org.sonatype.test: : <command>org.sonatype.test</command> 
Confirm properties configuration:
groupId: org.sonatype.test
artifactId: sample-library
version: 1.0-SNAPSHOT
package: org.sonatype.test
 Y: : <command>Y</command>
[INFO] Parameter: groupId, Value: org.sonatype.test
[INFO] Parameter: packageName, Value: org.sonatype.test
[INFO] Parameter: basedir, Value: /Users/Tim/flex-sample
[INFO] Parameter: package, Value: org.sonatype.test
[INFO] Parameter: version, Value: 1.0-SNAPSHOT
[INFO] Parameter: artifactId, Value: sample-application
[INFO] BUILD SUCCESSFUL

</screen>

      <para>Si vous regardez dans le répertoire sample-application/ vous verrez l'arborescence
      de fichiers illustrée dans la <xref linkend="fig-flex-dev-dir-app-fs" />.</para>

      <figure id="fig-flex-dev-dir-app-fs">
        <title>Structure de fichiers issue de l'archétype Application Flex</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/flex-dev-arche-simple-app-fs.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/flex-dev-arche-simple-app-fs.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>La génération d'une application Flex via l'archétype produit le POM suivant.</para>

      <example id="ex-flex-dev-app-pom">
        <title>POM généré par l'archétype Application Flex</title>

        <programlisting>&lt;project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/maven-v4_0_0.xsd"&gt;

  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

  &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;
  &lt;artifactId&gt;sample-application&lt;/artifactId&gt;
  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;packaging&gt;swf&lt;/packaging&gt;

  &lt;name&gt;sample-application Flex&lt;/name&gt;

  &lt;build&gt;
    &lt;sourceDirectory&gt;src/main/flex&lt;/sourceDirectory&gt;
    &lt;testSourceDirectory&gt;src/test/flex&lt;/testSourceDirectory&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
        &lt;artifactId&gt;flexmojos-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;${flexmojos.version}&lt;/version&gt;
        &lt;extensions&gt;true&lt;/extensions&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;

  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;com.adobe.flex.framework&lt;/groupId&gt;
      &lt;artifactId&gt;flex-framework&lt;/artifactId&gt;
      &lt;version&gt;3.2.0.3958&lt;/version&gt;
      &lt;type&gt;pom&lt;/type&gt;
    &lt;/dependency&gt;

    &lt;!-- flexmojos Unit testing support --&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
      &lt;artifactId&gt;flexmojos-unittest-support&lt;/artifactId&gt;
      &lt;version&gt;${flexmojos.version}&lt;/version&gt;
      &lt;type&gt;swc&lt;/type&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;

&lt;/project&gt;
</programlisting>
      </example>

      <para>La différence entre l'<xref linkend="ex-flex-dev-app-pom" /> et 
      l'<xref linkend="fig-flex-dev-simple-lib-pom" /> se trouve dans le type de
      <varname>packaging</varname> : <varname>swf</varname> plutôt que 
      <varname>swc</varname>. En positionnant le packaging à
      <varname>swf</varname>, le projet produira une application Flex, à savoir l'application
      <filename>target/sample-application-1.0-SNAPSHOT.swf</filename>. L'application 
	    exemple produite par cet archétype affichera le texte "Hello
      World". Le fichier source <filename>Main.mxml</filename> se trouve dans 
      <filename>src/main/flex</filename>.</para>

      <example>
        <title>Application exemple Main.mxml</title>

        <programlisting>&lt;mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute"&gt;
        &lt;mx:Text text="Hello World!"/&gt;
&lt;/mx:Application&gt;
</programlisting>
      </example>

      <para>L'archétype produit également un test unitaire FlexUnit simple qui ne fait rien d'autre 
      que d'afficher un message de trace. L'exemple de test unitaire se trouve
      dans <filename>src/test/flex/org/sonatype/test</filename>.</para>

      <example>
        <title>Test unitaire de Main.mxml</title>

        <programlisting>package org.sonatype.test 
{

        import flexunit.framework.TestCase;
        import Main;

        public class TestApp extends TestCase 
        {

                public function testNothing():void 
                {
                        //TODO un implemented
                        trace("Hello test"); 
                }
        }
}
</programlisting>
      </example>
    </section>

    <section id="flex-dev-sect-multimodule-archetype">
      <title>Creation d'un projet multimodule : Une application web avec une dépendance Flex</title>

      <para>La ligne de commande suivante crée un projet multimodule contenant un projet de 
      bibliothèque Flex référencée par une application Flex qui elle-même est référencée par une
      application web : </para>

      <screen>$ <command>mvn archetype:generate \
  -DarchetypeRepository=http://repository.sonatype.org/content/groups/public \
  -DarchetypeGroupId=org.sonatype.flexmojos \
  -DarchetypeArtifactId=flexmojos-archetypes-modular-webapp \
  -DarchetypeVersion=${flexmojos.version}</command>
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'archetype'.
[INFO] com.sonatype.maven.plugins: checking for updates from central
...
[INFO] [archetype:generate]
[INFO] Generating project in Interactive mode
[INFO] Archetype defined by properties
...
Define value for groupId: : <command>org.sonatype.test</command>
Define value for artifactId: : <command>sample-multimodule</command>
Define value for version:  1.0-SNAPSHOT: : <command>1.0-SNAPSHOT</command>
Define value for package:  org.sonatype.test: : <command>org.sonatype.test</command> 
Confirm properties configuration:
groupId: org.sonatype.test
artifactId: sample-library
version: 1.0-SNAPSHOT
package: org.sonatype.test
 Y: : <command>Y</command>
[INFO] Parameter: groupId, Value: org.sonatype.test
[INFO] Parameter: packageName, Value: org.sonatype.test
[INFO] Parameter: basedir, Value: /Users/Tim
[INFO] Parameter: package, Value: org.sonatype.test
[INFO] Parameter: version, Value: 1.0-SNAPSHOT
[INFO] Parameter: artifactId, Value: sample-multimodule
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
</screen>

      <para>Si vous regardez dans le répertoire <filename>sample-multimodule/</filename>, 
	    vous verrez une arborescence qui contient trois projets swc, swf et war.</para>

      <figure id="fig-flex-dev-multimodule-archetype-fs">
        <title>Arborescence de fichiers issue de l'archétype multimodule Flex</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/flex-dev-arche-multimodule-fs.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/flex-dev-arche-multimodule-fs.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Le POM parent du projet multimodule est simple comme vous pouvez le voir ci-dessous.
      Il est constitué de références aux modules swc, swf et war.</para>

      <example>
        <title>POM parent produit par l'archétype multimodule Flex</title>

        <programlisting>&lt;project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                     http://maven.apache.org/maven-v4_0_0.xsd"&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
  &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;
  &lt;artifactId&gt;sample-multimodule&lt;/artifactId&gt;
  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;packaging&gt;pom&lt;/packaging&gt;
  
  &lt;modules&gt;
    &lt;module&gt;swc&lt;/module&gt;
    &lt;module&gt;swf&lt;/module&gt;
    &lt;module&gt;war&lt;/module&gt;
  &lt;/modules&gt;
&lt;/project&gt;
</programlisting>
      </example>

      <para>Le projet swc a un POM simple qui ressemble au POM illustré dans 
      l'<xref linkend="fig-flex-dev-simple-lib-pom" />. Notez que
      l'<varname>artifactId</varname> de ce POM ne reflète pas le nom du
      module mais est <varname>swc-swc</varname>.</para>

      <example>
        <title>POM du module swc</title>

        <programlisting>&lt;project&gt;

  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

  &lt;parent&gt;
    &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;
    &lt;artifactId&gt;sample-multimodule&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;/parent&gt;

  &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;
  &lt;artifactId&gt;swc-swc&lt;/artifactId&gt;
  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;packaging&gt;swc&lt;/packaging&gt;
  &lt;name&gt;swc Library&lt;/name&gt;
  &lt;build&gt;
    &lt;sourceDirectory&gt;src/main/flex&lt;/sourceDirectory&gt;
    &lt;testSourceDirectory&gt;src/test/flex&lt;/testSourceDirectory&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
        &lt;artifactId&gt;flexmojos-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;${flexmojos.version}&lt;/version&gt;
        &lt;extensions&gt;true&lt;/extensions&gt;
        &lt;configuration&gt;
          &lt;locales&gt;
            &lt;locale&gt;en_US&lt;/locale&gt;
          &lt;/locales&gt;
        &lt;/configuration&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;

  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;com.adobe.flex.framework&lt;/groupId&gt;
      &lt;artifactId&gt;flex-framework&lt;/artifactId&gt;
      &lt;version&gt;3.2.0.3958&lt;/version&gt;
      &lt;type&gt;pom&lt;/type&gt;
    &lt;/dependency&gt;

    &lt;!-- flexmojos Unit testing support --&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
      &lt;artifactId&gt;flexmojos-unittest-support&lt;/artifactId&gt;
      &lt;version&gt;${flexmojos.version}&lt;/version&gt;
      &lt;type&gt;swc&lt;/type&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;

&lt;/project&gt;
</programlisting>
      </example>

      <para>Le POM du module swf est semblable au POM de l'<xref
      linkend="ex-flex-dev-app-pom" /> avec une dépendance vers l'artefact
      <varname>swc-swc</varname> en plus. Notez que
      l'<varname>artifactId</varname> de ce POM ne reflète pas le nom du répertoire qui contient le
      module ; l'artifactId dans le POM ci-dessous est <varname>swf-swf</varname>.</para>

      <example id="ex-flex-swf-module-pom">
        <title>POM du module swf</title>

        <programlisting>&lt;project&gt;

  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

  &lt;parent&gt;
    &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;
    &lt;artifactId&gt;sample-multimodule&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;/parent&gt;

  &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;

  &lt;artifactId&gt;swf-swf&lt;/artifactId&gt;
  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;packaging&gt;swf&lt;/packaging&gt;
  &lt;name&gt;swf Application&lt;/name&gt;

  &lt;build&gt;
    &lt;sourceDirectory&gt;src/main/flex&lt;/sourceDirectory&gt;
    &lt;testSourceDirectory&gt;src/test/flex&lt;/testSourceDirectory&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
        &lt;artifactId&gt;flexmojos-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;${flexmojos.version}&lt;/version&gt;
        &lt;extensions&gt;true&lt;/extensions&gt;
        &lt;configuration&gt;
          &lt;locales&gt;
            &lt;locale&gt;en_US&lt;/locale&gt;
          &lt;/locales&gt;
        &lt;/configuration&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;

  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;com.adobe.flex.framework&lt;/groupId&gt;
      &lt;artifactId&gt;flex-framework&lt;/artifactId&gt;
      &lt;version&gt;3.2.0.3958&lt;/version&gt;
      &lt;type&gt;pom&lt;/type&gt;
    &lt;/dependency&gt;

    &lt;!-- flexmojos Unit testing support --&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
      &lt;artifactId&gt;flexmojos-unittest-support&lt;/artifactId&gt;
      &lt;version&gt;${flexmojos.version}&lt;/version&gt;
      &lt;type&gt;swc&lt;/type&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;

    &lt;dependency&gt;
      &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;
      &lt;artifactId&gt;swf-swc&lt;/artifactId&gt;
      &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
      &lt;type&gt;swc&lt;/type&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
&lt;/project&gt;
</programlisting>
      </example>

<!-- TODO Create JIRA as we are now in FlexMojo 3.3.0 -->
      <warning>
        <para>Dans l'<xref linkend="ex-flex-swf-module-pom" />, la dépendance vers
        "swf-swc" doit être changée en "swc-swc". C'est un bug de l'archétype multimodule Flex
	     qui est présent dans la version ${flexmojos.version} de FlexMojos. Il sera corrigé dans
         la version FlexMojos 3.2.0.</para>
      </warning>

      <para>Quand vous déclarez une dépendance vers un SWC, vous devez préciser le type de 
      dépendance afin que Maven puisse localiser les artefacts adéquats dans le dépôt distant ou local. 
      Dans ce cas, le projet
      <varname>swf-swf</varname> dépend du SWC produit par le projet <varname>swc-swc</varname>.
      Quand vous ajoutez la dépendance au projet <varname>swf-swf</varname>, le plugin FlexMojos
      ajoutera le fichier SWC approprié dans le chemin des bibliothèques de compilation Flex.</para>

      <para>Maintenant, jetez un coup d'oeil dans le POM simple du module war.</para>

      <example id="ex-flex-war-module-pom">
        <title>POM du module war</title>

        <programlisting>&lt;project&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
  &lt;parent&gt;
    &lt;artifactId&gt;sample-multimodule&lt;/artifactId&gt;
    &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;/parent&gt;
  &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;
  &lt;artifactId&gt;war-war&lt;/artifactId&gt;
  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;packaging&gt;war&lt;/packaging&gt;
  &lt;build&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
        &lt;artifactId&gt;flexmojos-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;${flexmojos.version}&lt;/version&gt;
        &lt;executions&gt;
          &lt;execution&gt;
            &lt;goals&gt;
              &lt;goal&gt;copy-flex-resources&lt;/goal&gt;
            &lt;/goals&gt;
          &lt;/execution&gt;
        &lt;/executions&gt;
      &lt;/plugin&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;
        &lt;artifactId&gt;maven-jetty-plugin&lt;/artifactId&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;
  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.sonatype.test&lt;/groupId&gt;
      &lt;artifactId&gt;war-swf&lt;/artifactId&gt;
      &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
      &lt;type&gt;swf&lt;/type&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
&lt;/project&gt;
</programlisting>
      </example>

      <warning>
        <para>Dans l'<xref linkend="ex-flex-war-module-pom" />, la dépendance vers 
        "war-swf" doit être remplacée par "swf-swf". C'est un bug dans l'archétype multimodule Flex 
	      qui est présent dans la version 
        ${flexmojos.version} de FlexMojos. Il sera corrigé dans la version FlexMojos 3.2.0.</para>
      </warning>

      <para>Le POM illustré dans l'<xref linkend="ex-flex-war-module-pom" />
      configure le plugin FlexMojos pour exécuter le goal
      <varname>copy-flex-resources</varname> pour ce projet. Le goal
      <varname>copy-flex-resources</varname> copiera l'application SWF
      à la racine de l'application web. Dans ce projet, l'exécution du build
      et la production du WAR copieront le fichier
      <filename>swf-swf-1.0-SNAPSHOT.swf</filename> dans le répertoire racine de l'application web 
      <filename>target/war-war-1.0-SNAPSHOT</filename>.</para>

      <para>Pour construire l'application web multimodule, exécutez <command>mvn
      install</command> depuis le répertoire racine. Ceci doit générer les artefacts
      <varname>swc-swc</varname>, <varname>swf-swf</varname> et
      <varname>war-war</varname> et produire le fichier WAR 
	    <filename>/target/war-war-1.0-SNAPSHOT.war</filename> qui contient
      le <filename>swf-swf-1.0-SNAPSHOT.swf</filename> à la racine de 
      l'application web.</para>

      <note>
        <para>Pour pouvoir exécuter les tests unitaires Flex, il vous faudra configurer votre variable d'environnement PATH
        afin d'inclure le lecteur Flash Player. Pour plus d'information concernant la configuration de FlexMojos pour les tests unitaires, 
        se référer à la <xref
        linkend="flex-dev-sect-configuring-unit-tests" />.</para>
      </note>
    </section>
  </section>

  <section id="flex-dev-sect-custom-lifecycle">
    <title>Le cycle de vie de FlexMojos</title>

    <para>Le plugin Maven FlexMojos personnalise le cycle de vie en se basant sur le type de
    packaging. Si votre projet a un <varname>packaging</varname> de type
    <varname>swc</varname> ou <varname>swf,</varname> alors le plugin FlexMojos 
    exécute un cycle de vie personnalisé, si toutefois votre configuration de plugin positionne 
    les extensions à <varname>true</varname>. L'<xref linkend="ex-flex-dev-extensions-true" /> illustre
    la configuration de plugin pour le <varname>flexmojos-maven-plugin</varname> avec la balise
    <varname>extensions</varname> positionnée à <varname>true</varname>.</para>

    <example id="ex-flex-dev-extensions-true">
      <title>Configuration de l'élément extensions à true pour un cycle de vie personnalisé Flex</title>

      <programlisting>  &lt;build&gt;
    &lt;sourceDirectory&gt;src/main/flex&lt;/sourceDirectory&gt;
    &lt;testSourceDirectory&gt;src/test/flex&lt;/testSourceDirectory&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
        &lt;artifactId&gt;flexmojos-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;${flexmojos.version}&lt;/version&gt;
        <emphasis>&lt;extensions&gt;true&lt;/extensions&gt;</emphasis>
        &lt;configuration&gt;
          &lt;locales&gt;
            &lt;locale&gt;en_US&lt;/locale&gt;
          &lt;/locales&gt;
        &lt;/configuration&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;</programlisting>
    </example>

    <section id="flex-dev-sect-lifecycle-swc">
      <title>Le cycle de vie SWC</title>

      <para>Quand le packaging est du type <varname>swc</varname>, FlexMojos exécute le cycle de vie
      illustré dans la <xref linkend="fig-flex-dev-swc-lifecycle" />. Les goals surlignés
      sont des goals spécifiques au plugin FlexMojos, ceux qui ne le sont pas sont des goals standards
      du plugin Core Maven.</para>

      <figure id="fig-flex-dev-swc-lifecycle">
        <title>Le cycle de vie SWC de FlexMojos </title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/flex-dev_swc-lifecycle.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/flex-dev_swc-lifecycle.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Les goals FlexMojos participants sont les suivants :</para>

      <variablelist>
        <varlistentry>
          <term>flexmojos:compile-swc</term>

          <listitem>
            <para>Ce goal compile en une bibliothèque SWC tous les fichiers ActionScript et MXML
            présents dans le répertoire <varname>sourceDirectory</varname>. Un fichier
            <acronym>SWC</acronym> est une bibliothèque Adobe qui contient des composants et des
            ressources utilisées dans des applications Flex.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>flexmojos:test-compile</term>

          <listitem>
            <para>Ce goal compile tous les fichiers ActionScript et MXML qui se trouvent 
            dans le répertoire <varname>testSourceDirectory</varname>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>flexmojos:test-run</term>

          <listitem>
            <para>Ce goal exécute les tests unitaires en utilisant le lecteur Flash Player. Ce 
            goal ne peut s'exécuter que sile  Flash Player a été correctement configuré comme
            décrit dans la <xref
            linkend="flex-dev-sect-configuring-unit-tests" />.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section id="flex-dev-sect-lifecycle-swf">
      <title>Le cycle de vie SWF</title>

      <para>Quand le type depackaging est <varname>swf</varname>, FlexMojos exécute le cycle
      de vie illustré dans la <xref linkend="fig-flex-dev-swf-lifecycle" />. Les goals
      surlignés sont spécifiques au plugin FlexMojos, ceux qui ne le sont pas
      sont des goals standards du plugin Core Maven.</para>

      <figure id="fig-flex-dev-swf-lifecycle">
        <title>Cycle de vie SWF de FlexMojos</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/flex-dev_swf-lifecycle.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/flex-dev_swf-lifecycle.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Les goals FlexMojos participants sont les suivants :</para>

      <variablelist>
        <varlistentry>
          <term>flexmojos:compile-swf</term>

          <listitem>
            <para>Ce goal compile en un fichier <acronym>SWF</acronym> tous les fichiers ActionScript 
            et MXML du répertoire <varname>sourceDirectory</varname>. Un fichier <acronym>SWF</acronym>
            est un fichier qui contient une application qui peut être exectuée dans le lecteur
            Flash Player or le l'environnement d'exécution Adobe AIR.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>flexmojos:test-compile</term>

          <listitem>
            <para>Ce goal compile tous les fichiers ActionScript et MXML 
            du répertoire <varname>testSourceDirectory</varname>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>flexmojos:test-run</term>

          <listitem>
            <para>Ce goal exécute les tests unitaires en utilisant le lecteur Flash Player. 
            Ce goal ne peut être exécuté que si le lecteur Flash Player été a correctement configuré
            comme décrit dans la <xref
            linkend="flex-dev-sect-configuring-unit-tests" />.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section id="flex-dev-sect-goals">
    <title>Les goals du plugin FlexMojos</title>

    <para>Le plugin Maven FlexMojos contient les goals suivants :</para>

    <variablelist>
      <varlistentry>
        <term>flexmojos:asdoc</term>

        <listitem>
          <para>Génère la documentation pour les fichiers source ActionScript</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:asdoc-report</term>

        <listitem>
          <para>Génère la documentation pour les fichiers source ActionScript sous la forme d'un
          rapport qui peut être inclus dans un site Maven</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:compile-swc</term>

        <listitem>
          <para>Compile les sources Flex (ActionScript et MXML) en une bibliothèque <acronym>SWC</acronym>
          pour une intégration dans une application Flex ou AIR</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:compile-swf</term>

        <listitem>
          <para>Compile les sources Flex (ActionScript et MXML) en une application 
          <acronym>SWF</acronym> pour lecteur Adobe Flash Player ou l'environnement d'exécution Adobe AIR </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:copy-flex-resources</term>

        <listitem>
          <para>Copie les ressources Flex dans le projet de l'application web</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:flexbuilder</term>

        <listitem>
          <para>Génère les fichiers de configuration du projet pour l'environnement de développement Adobe Flex Builder</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:generate</term>

        <listitem>
          <para>Génère, via Granite GAS3, des fichiers sources ActionScript 3 sur la base de classes Java</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:optimize</term>

        <listitem>
          <para>Goal qui exécute une optimisation des fichiers swc, postérieurement à leur inclusion
          dans une application <acronym>SWF</acronym>. Ce
          goal est utilisé pour produire des fichiers <acronym>RSL</acronym>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:sources</term>

        <listitem>
          <para>Génère un JAR contenant toutes les sources du projet Flex</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:test-compile</term>

        <listitem>
          <para>Compile toutes les classes de test du projet Flex</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:test-run</term>

        <listitem>
          <para>Exécute les tests unitaires en utilisant le lecteur Adobe Flash Player</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:test-swc</term>

        <listitem>
          <para>produit un fichier <acronym>SWC</acronym> contenant les classes de test du projet
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flexmojos:wrapper</term>

        <listitem>
          <para>Génère une page HTML qui encapsule l'application <acronym>SWF</acronym></para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section id="flex-dev-sect-gen-asdoc">
      <title>Génération de la documentation ActionScript</title>

      <para>Vous pouvez exécuter les goals asdoc ou asdoc-report pour générer
      la documentation des sources ActionScript. Une fois générée, la
      documentation est sauvegardée en HTML dans le répertoire 
      <filename>\${basedir}/target/asdoc</filename>. La <xref
      linkend="fig-flex-dev-actionscript" /> illustre le résultat issu de l'exécution du goal
      <varname>asdoc</varname> pour le projet obtenu via l'archétype Flexmojos.</para>

      <figure id="fig-flex-dev-actionscript">
        <title>Documentation ActionScript produite par le plugin FlexMojos</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/flex-dev_asdoc-browser.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/flex-dev_asdoc-browser.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section id="flex-dev-sect-compiling">
      <title>Compilation des sources Flex</title>

      <para>FlexMojos présente nombre de goals compilant ActionScript
      et MXML en fichiers SWC et SWF. Les goals <varname>compile-swc</varname> et <varname>compile-swf</varname> sont utilisés
      pour produire les artefacts à partir des sources du projet. Le goal <varname>test-compile</varname> est utilisé pour compiler
 	    les tests unitaires. Dans les projets simples créés par les archétypes
      FlexMojos, les goals <varname>compile-swc</varname> et <varname>compile-swf</varname> sont invoqués
      parce que le projet personnalise le cycle de vie et rattache 
      <varname>compile-swc</varname> ou <varname>compile-swf</varname> à la phase de compilation et <varname>test-compile</varname> à la phase 
      <varname>test-compile</varname>. Si vous avez besoin de configurer les options du compilateur
      FlexMojos, vous le ferez à travers les options de configuration du plugin FlexMojos.
	    Par exemple, si vous voulez que l'application avec le POM
      illustré dans l'<xref linkend="ex-flex-dev-app-pom" /> ignore les alertes de compilation au niveau du code
      et utilise des polices personnalisées,
      vous pouvez utiliser une configuration de plugin comme celle illustrée dans l'<xref
      linkend="ex-flex-dev-customizing-compiler" />.</para>

      <example id="ex-flex-dev-customizing-compiler">
        <title>Configuration du plugin pour une compilation personnalisée</title>

        <programlisting>  &lt;build&gt;
    &lt;sourceDirectory&gt;src/main/flex&lt;/sourceDirectory&gt;
    &lt;testSourceDirectory&gt;src/test/flex&lt;/testSourceDirectory&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
        &lt;artifactId&gt;flexmojos-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;${flexmojos.version}&lt;/version&gt;
        &lt;extensions&gt;true&lt;/extensions&gt;
        &lt;configuration&gt;
          &lt;configurationReport&gt;true&lt;/configurationReport&gt;
          &lt;warnings&gt;
            &lt;arrayTostringChanges&gt;true&lt;/arrayTostringChanges&gt;
            &lt;duplicateArgumentNames&gt;false&lt;/duplicateArgumentNames&gt;
          &lt;/warnings&gt;
          &lt;fonts&gt;
            &lt;advancedAntiAliasing&gt;true&lt;/advancedAntiAliasing&gt;
            &lt;flashType&gt;true&lt;/flashType&gt;
            &lt;languages&gt;
              &lt;englishRange&gt;U+0020-U+007E&lt;/englishRange&gt;
            &lt;/languages&gt;
            &lt;localFontsSnapshot&gt;
              \${basedir}/src/main/resources/fonts.ser
            &lt;/localFontsSnapshot&gt;
            &lt;managers&gt;
              &lt;manager&gt;flash.fonts.BatikFontManager&lt;/manager&gt;
            &lt;/managers&gt;
            &lt;maxCachedFonts&gt;20&lt;/maxCachedFonts&gt;
            &lt;maxGlyphsPerFace&gt;1000&lt;/maxGlyphsPerFace&gt;
          &lt;/fonts&gt;
        &lt;/configuration&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;</programlisting>
      </example>
    </section>

    <section id="flex-dev-sect-flexbuilder">
      <title>Génération des fichiers de projet Flex Builder</title>

      <para>Pour générer les fichiers de projet Flex Builder pour un projet FlexMojos,
      configurez les groupes de plugin comme décrit dans la <xref
      linkend="flex-dev-sect-plugin-group" /> et lancez le goal
      <varname>flexbuilder</varname> :</para>

      <screen>$ <command>mvn flexmojos:flexbuilder</command></screen>

      <para>L'exécution de ce goal produira les fichiers : <filename>.project</filename>,
      <filename>.settings/org.eclipse.core.resources.prefs</filename>, <filename>.actionScriptProperties</filename> et
      <filename>.flexLibProperties</filename>.</para>
    </section>
  </section>

  <section id="flex-dev-sect-reports">
    <title>Rapports du plugin FlexMojos</title>

    <para>Le plugin Maven FlexMojos propose le rapport suivant :</para>

    <variablelist>
      <varlistentry>
        <term>flexmojos:asdoc-report</term>

        <listitem>
          <para>Produit la documentation du code source ActionScript sous la forme d'un rapport
          pouvant être intégré dans un site Maven</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section id="flex-dev-sect-report-asdoc">
      <title>Produire le rapport de documentation ActionScript</title>

      <para>Pour que l'<varname>asdoc-report</varname> soit intégré
      au build du site Maven, il suffit d'ajouter le code XML suivant à votre POM :</para>

      <example>
        <title>Configuration pour une génération de documentation ActionScript</title>

        <programlisting>&lt;reporting&gt;
  &lt;plugins&gt;
    &lt;plugin&gt;
      &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
      &lt;artifactId&gt;flexmojos-maven-plugin&lt;/artifactId&gt;
      &lt;version&gt;${flexmojos.version}&lt;/version&gt;
      &lt;reportSets&gt;
        &lt;reportSet&gt;
          &lt;id&gt;flex-reports&lt;/id&gt;
          &lt;reports&gt;
            &lt;report&gt;asdoc-report&lt;/report&gt;
          &lt;/reports&gt;
        &lt;/reportSet&gt;
      &lt;/reportSets&gt;
    &lt;/plugin&gt;
  &lt;/plugins&gt;
&lt;/reporting&gt;
</programlisting>
      </example>

      <para>Quand vous exécutez la commande <command>mvn site</command>, Maven générera cette
      documentation et la placera dans le menu "Project Reports" comme vous pouvez le voir
      dans la <xref linkend="fig-flex-dev-actionscript-report" />.</para>

      <figure id="fig-flex-dev-actionscript-report">
        <title>Documentation ActionScript incluse dans le site Maven</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/flex-dev_asdocs-report.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/flex-dev_asdocs-report.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Si vous avez besoin de fournir des options de configuration au goal
      <varname>asdoc-report</varname>, il vous faudra ajouter un élément de configuration 
      <varname>reportSets</varname> comme le montre l'<xref
      linkend="ex-flex-dev-config-asdoc-report" />.</para>

      <example id="ex-flex-dev-config-asdoc-report">
        <title>Configuration de asdoc-report</title>

        <programlisting>&lt;reporting&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.sonatype.flexmojos&lt;/groupId&gt;
        &lt;artifactId&gt;flexmojos-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;${flexmojos.version}&lt;/version&gt;
        &lt;reportSets&gt;
          &lt;reportSet&gt;
            &lt;id&gt;flex-reports&lt;/id&gt;
            &lt;reports&gt;
              &lt;report&gt;asdoc-report&lt;/report&gt;
            &lt;/reports&gt;
            &lt;configuration&gt;
              &lt;windowTitle&gt;My TEST API Doc&lt;/windowTitle&gt;
              &lt;footer&gt;Copyright 2009 Sonatype&lt;/footer&gt;
            &lt;/configuration&gt;
          &lt;/reportSet&gt;
        &lt;/reportSets&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/reporting&gt;
</programlisting>
      </example>
    </section>
  </section>

  <section id="flex-dev-sect-dev">
    <title>Développement et personnalisation de Flexmojos</title>

    <para>Les sections suivantes vous guideront à travers les premières étapes de personnalisation 
    de Flexmojos, voire de contribution au projet lui-même. Flexmojos est plus qu'un simple outil
    de compilation de l'ActionScript en artefacts SWF et SWC ; c'est une communauté de développeurs.
    Cette section ne concerne pas tout le monde, mais si quelquechose vous dérange et que vous
    voulez participer, vous êtes les bienvenus.</para>

    <section id="flex-dev-sect-get-source">
      <title>Obtenir le code source Flexmojos </title>

      <para>Flexmojos est un projet Open Source hébergé par Sonatype dont le code source est 
        enregistré dans le dépôt Subversion de la forge Sonatype. Vous pouvez visualiser le contenu
        du dépôt Subversion de Flexmojos en ouvrant, dans un navigateur web, le lien
      <ulink
      url="http://svn.sonatype.org/flexmojos/trunk">http://svn.sonatype.org/flexmojos/trunk</ulink>.</para>

      <figure id="flex-dev-svn-repo">
        <title>Le dépôt Subversion de Flexmojos</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/flex-dev-subversion.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/flex-dev-subversion.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Si participer au projet Flexmojos vous intéresse, vous récupérerez probablement la
      version courante du projet sur votre machine. Pour récupérer le code source Flexmojos en
      utilisant Subversion, saisissez la ligne de commande suivante :</para>

      <screen>$ <command>svn co http://svn.sonatype.org/flexmojos/trunk flexmojos</command>
A flexmojos
...
$ <command>ls</command>
COPYRIGHT               flexmojos-sandbox         pom.xml
flexmojos-archetypes    flexmojos-super-poms      src
flexmojos-maven-plugin  flexmojos-testing
flexmojos-parent        flexmojos-touchstone
</screen>
    </section>
  </section>
</chapter>