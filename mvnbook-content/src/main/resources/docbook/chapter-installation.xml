<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="installation" lang="fr">
  <title>Installation et Exécution de Maven</title>
  <para>Ce chapitre contient les instructions détaillées pour installer Maven sur de nombreuses plateformes. Plutôt que de supposer que vous sachiez comment installer un logiciel et définir des variables d'environnement, nous avons fait le choix d'être aussi détaillés que possible afin de réduire le nombre de problèmes que vous pourriez rencontrer suite à une installation partielle. La seule chose que nous allons supposer dans ce chapitre est que vous avez déjà installé un <acronym>JDK</acronym> (Java Development Kit) convenable. Si vous n'êtes intéressés que par l'installation elle-même, vous pouvez passer à la suite du livre après avoir lu
    <xref linkend="installation-sect-maven-download" xrefstyle="select: title" /> et
    <xref linkend="installation-sect-maven-install" xrefstyle="select: title" />. Si vous vous intéressez aux détails de votre installation de Maven, ce chapitre y est entièrement consacré, et vous donne une vision d'ensemble de ce que vous avez installé et de la licence Apache Software License, Version 2.0.
  </para>
  <section id="installation-sect-java">
    <title>Vérification de votre Installation de Java</title>
    <para>Même si Maven (pour les versions inférieures à la 2.1) peut s'exécuter avec Java 1.4, dans ce livre nous supposerons que vous avez installé au minimum Java 5. Utilisez la version stable la plus récente du <acronym>JDK</acronym> (Java Development Kit) disponible pour votre système d'exploitation. Java 5 comme Java 6 permettront d'exécuter les exemples de ce livre.
    </para>
    <para><screen><prompt moreinfo="none">% </prompt><command moreinfo="none">java -version</command>
java version "1.5.0_16"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_16-b06-284)
Java HotSpot(TM) Client VM (build 1.5.0_16-133, mixed mode, sharing)</screen></para>
    <para>Maven fonctionne avec tous les kits de développement Java
      <superscript>TM</superscript> certifiés compatibles, et également avec certaines implémentations de Java non certifiées. Les exemples fournis avec ce livre ont été écrits et testés avec les versions officielles du Java Development Kit téléchargées depuis le site internet de Sun Microsystems. Si vous êtes sous Linux, vous pouvez avoir besoin de télécharger le
      <acronym>JDK</acronym> de Sun vous-même et vérifier qu'il s'agit de la version que vous utilisez (en exécutant la commande
      <command>java
    -version
      </command>). Maintenant que Sun a mis Java en opensource, cela devrait s'améliorer et nous devrions rapidement trouver la
      <acronym>JRE</acronym> et le
      <acronym>JDK</acronym> de Sun par défaut même dans les distributions puristes de Linux. En attendant ce jour, vous pouvez avoir à le télécharger.
    </para>
  </section>
  <section id="installation-sect-maven-download">
    <title>Téléchargement de Maven</title>
    <para>Vous pouvez télécharger Maven depuis le site internet du projet Apache Maven avec l'url suivante
      <ulink
    url="http://maven.apache.org/download.html">http://maven.apache.org/download.html
      </ulink>.
    </para>
    <para>Lorsque vous téléchargez Maven, faites attention à choisir la dernière version de Apache Maven disponible sur le site de Maven. La dernière version de Maven lorsque ce livre a été écrit était Maven ${maven.version}. Si l'Apache Software License ne vous dit rien, nous vous suggérons de vous familiariser avec les termes de cette licence avant de commencer à utiliser le produit. Plus d'informtionas sur l'Apache Software License se trouvent dans la section
      <xref linkend="installation-sect-license" />.
    </para>
  </section>
  <section id="installation-sect-maven-install">
    <title>Installer Maven</title>
    <para>Il existe de grandes différences entre un système d'exploitation comme  Mac
      <acronym>OS X</acronym> et Microsoft Windows, il en est de même entre les différentes versions de Windows. Heureusement, le processus d'installation de Maven est relativement simple et sans douleur sur ces systèmes d'exploitation. Les sections qui suivent mettent en relief les bonnes pratiques pour installer Maven sur une palette de systèmes d'exploitation.
    </para>
    <section id="installation-sect-maven-osx">
      <title>Installer Maven sur Mac OSX</title>
      <para>Vous pouvez télécharger une version binaire de Maven<indexterm>
          <primary>installer Maven</primary>
          <secondary sortas="Mac OS X">sur Mac OS X</secondary>
        </indexterm>
        <indexterm>
          <primary sortas="maven @installing">Maven, installer</primary>
          <secondary sortas="Mac OS X">sur Mac OS X</secondary>
        </indexterm>
        <indexterm>
          <primary>Mac OS X, installer Maven sur</primary>
        </indexterm> depuis <ulink
      url="http://maven.apache.org/download.html">
        </ulink>. Télécharger la version courante de Maven dans le format qui vous convient le mieux. Choisissez l'emplacement où vous voulez l'installer et décompressez l'archive à cet endroit. Si vous avez décompressé l'archive dans le répertoire
        <filename>/usr/local/apache-maven-${maven.version}</filename>, vous pouvez vouloir créer un lien symbolique afin de vous faciliter la vie et éviter d'avoir à modifier l'environnement.
      </para><screen>/usr/local %<command moreinfo="none">cd /usr/local</command>
      /usr/local %<command moreinfo="none">ln -s apache-maven-${maven.version} maven</command>
      /usr/local %<command>export M2_HOME=/usr/local/maven</command>
      /usr/local %<command>export PATH=\${M2_HOME}/bin:\${PATH}</command></screen>
      <para>Une fois Maven installé, il vous reste quelques petites choses à faire afin de pouvoir l'utiliser correctement. Vous devez ajouter le répertoire
        <filename
      moreinfo="none">bin</filename> de la distribution (dans notre exemple,
        <filename moreinfo="none">/usr/local/maven/bin</filename>) au PATH de votre système. Vous devez aussi positionner la variable d'environnement
        <varname>M2_HOME<indexterm>
            <primary>M2_HOME environement variable</primary>
            <secondary>Maven installation et</secondary>
          </indexterm>
          <indexterm>
            <primary>PATH variable, Maven installation et</primary>
          </indexterm></varname> sur le répertoire racine de votre installation
 (pour notre exemple, <filename moreinfo="none">/usr/local/maven</filename>).
      </para>
      <note>
        <para>Les instructions d'installation sont les mêmes pour
          <acronym>OSX</acronym> Tiger et
          <acronym>OSX</acronym> Leopard. On nous a rapporté que Maven 2.0.6 est livré avec la préversion de XCode. Si vous avez installé XCode, exécutez la commande
          <command>mvn</command> en ligne de commande pour vérifier sa disponibilité. XCode installe Maven dans le répertoire <filename>/usr/share/maven</filename>. Il est recommandé d'utiliser la dernière version de Maven ${maven.version}, de nombreux bugs critiques ont été corrigés depuis la version 2.0.6 de Maven.
        </para>
      </note>
      <para>Vous allez devoir ajouter les variables
        <envar>M2_HOME</envar> et
        <envar>PATH</envar> à un script qui sera exécuté à chaque fois que vous vous connecterez à votre système. Pour cela, ajouter les lignes suivantes au
        <filename>.bash_login</filename>.
      </para>
      <programlisting>export M2_HOME=/usr/local/maven
export PATH=\${M2_HOME}/bin:\${PATH}
      </programlisting>
      <para>Maintenant que vous avez mis à jour votre environnement avec ces quelques lignes, vous pouvez exécuter Maven en ligne de commande.</para>
      <note>
        <para>Pour ces instructions d'installation nous avons supposé que vous utilisiez le shell bash. </para>
      </note>
      <section id="installation-sect-macports">
        <title>Installer Maven sur OSX avec MacPorts</title>
        <para>Si vous utilisez MacPorts, vous pouvez installer le port maven2 en exécutant les instructions suivantes en ligne de commande. </para>
        <screen>$<command>sudo port install maven2</command>
Password: ******
---&gt;  Fetching maven2
---&gt;  Attempting to fetch apache-maven-${maven.version}-bin.tar.bz2 from http://www.apache.org/dist/maven/binaries
---&gt;  Verifying checksum(s) for maven2
---&gt;  Extracting maven2
---&gt;  Configuring maven2
---&gt;  Building maven2 with target all
---&gt;  Staging maven2 into destroot
---&gt;  Installing maven2 ${maven.version}_0
---&gt;  Activating maven2 ${maven.version}_0
---&gt;  Cleaning maven2</screen>
        <para>Pour plus d'informations sur le port maven2, allez voir maven2
          <filename>
            <ulink
        url="http://trac.macports.org/browser/trunk/dports/java/maven2/Portfile">Portfile
            </ulink>
          </filename>. Pour plus d'informations sur le projet MacPorts et son installation, allez voir la
          <ulink url="http://www.macports.org/index.php">page du projet MacPorts</ulink>.
        </para>
      </section>
    </section>
    <section id="installation-sect-windows">
      <title>Installer Maven sur Microsoft Windows</title>
      <para>Installer Maven sur Windows est très proche de l'installation sur Mac
        <acronym>OSX</acronym>. Les principales différences sont le répertoire d'installation et la définition des variables d'environnement. Dans ce livre, nous allons supposer que le répertoire d'installation de Maven est
        <filename>c:\Program
      Files\apache-maven-${maven.version}
        </filename>, mais ça ne change pas grand-chose si vous installez Maven dans un autre répertoire, tant que vous configurez correctement les variables d'environnement. Une fois que vous avez décompressé Maven dans le répertoire d'installation, il vous faut définir deux variables d'environnement :
        <envar>PATH</envar> et
        <envar>M2_HOME</envar>. En ligne de commande, vous pouvez définir ces variables d'environnement en tapant les instructions suivantes :
      </para>
      <screen>C:\Users\tobrien &gt;<command>set M2_HOME=c:\Program Files\apache-maven-${maven.version}</command>
C:\Users\tobrien &gt;<command>set PATH=%PATH%;%M2_HOME%\bin</command></screen>
      <para><!--TODO: Document process of setting environment variables in the window control panel system dialog.-->Définir ces variables d'environnement en ligne de commande vont vous permettre d'exécuter Maven dans la même console. Mais à moins de les définir comme des variables du Système avec le Panneau de Configuration, vous devrez exécuter ces deux lignes à chaque fois que vous vous connecterez à votre système. Vous devriez modifier ces deux variables avec le Panneau de Configuration de Microsoft Windows.
      </para>
    </section>
    <section id="installation-sect-maven-linux">
      <title>Installer Maven sur Linux</title>
      <para>Pour installer Maven sur une machine Linux, suivez la même procédure que 
        <xref linkend="installation-sect-maven-osx" />.
      </para>
    </section>
    <section id="installation-sect-bsd">
      <title>Installer Maven sur FreeBSD ou OpenBSD</title>
      <para>Pour installer Maven sur une machine FreeBSD ou OpenBSD, suivez la même procédure que 
        <xref linkend="installation-sect-maven-osx" />.
      </para>
    </section>
  </section>
  <section id="installation-sect-test-install">
    <title>Tester une Installation Maven</title>
    <para>Une fois Maven installé, vous pouvez vérifier sa version en exécutant la commande suivante
      <command>mvn -v</command> en ligne de commande. Si Maven a été correctement installé, vous devriez voir en sortie quelque chose ressemblant à cela.
    </para>
    <screen>$<command>mvn -v</command>
Apache Maven 2.2.1 (r801777; 2009-08-06 12:16:01-0700)
Java version: 1.5.0_16
Java home: /System/Library/Frameworks/JavaVM.framework/Versions/1.5.0/Home
Default locale: en_US, platform encoding: MacRoman
OS name: "mac os x" version: "10.5.6" arch: "i386" Family: "unix"</screen>
    <para>Si vous obtenez cette sortie, vous savez que Maven est disponible et prêt à être utilisé. Si vous n'obtenez pas cette sortie et que votre système d'exploitation ne peut pas trouver la commande
      <command>mvn</command>, vérifiez que vos variables d'environnement
      <envar>PATH</envar> et
      <envar>M2_HOME</envar> sont correctement définies.
    </para>
  </section>
  <section id="installation-sect-details">
    <title>Détails de l'Installation de Maven</title>
    <para>L'archive à télécharger de Maven a une taille d'environ 1.5 MiB
      <footnoteref
    linkend="foot-installation-mebibytes" />, cette taille réduite a été obtenue car le c&oelig;ur de Maven a été conçu pour récupérer à la demande plugins et dépendances depuis des dépôts distants. Lorsque vous commencez à utiliser Maven, celui-ci va télécharger les plugins depuis un dépôt local décrit dans
      <xref linkend="installation-sect-user" />. Comme vous êtes curieux, jettons un &oelig;il au répertoire d'installation de Maven.
      <footnote id="foot-installation-mebibytes">
        <para>Avez-vous déjà acheté un disque dur de 200 Go pour vous rendre compte qu'une fois installé il faisait moins de 200 GiB ? Les ordinateurs fonctionnent en Gibibytes, mais les boutiques vendent des produits en Gigaoctets. MiB représente des Mebibyte soit 2
          <superscript>20</superscript> ou 1024
          <superscript>2</superscript>. Ces mesures standardisées sont validées et reconnues par l'
          <acronym>IEEE</acronym>, le
          <acronym>CIPM</acronym>, et l'
          <acronym>IEC</acronym>. Pour plus d'informations sur Kibibytes, Mebibytes, Gibibytes, et Tebibytes, lisez
          <ulink
        url="http://en.wikipedia.org/wiki/Mebibyte">http://en.wikipedia.org/wiki/Mebibyte
          </ulink>,
        </para>
      </footnote>
    </para>
    <screen>/usr/local/maven $<command>ls -p1</command>
LICENSE.txt
NOTICE.txt
README.txt
bin/
boot/
conf/
lib/</screen>
    <para>Le fichier
      <filename>LICENSE.txt</filename> contient la licence logicielle pour
      <indexterm>
        <primary>LICENSE.txt file</primary>
      </indexterm>Apache Maven. Cette licence sera détaillée dans la <xref linkend="installation-sect-license" />.
      <filename>NOTICE.txt</filename> contient des remarques et les attributions
      <indexterm>
        <primary>NOTICE.txt file</primary>
      </indexterm>exigées par les bibliothèques dont dépend Maven.
      <indexterm>
        <primary>README.txt file</primary>
      </indexterm>
      <filename role="keep-together">README.txt</filename> contient lui les instructions d'installation. Le répertoire
      <filename>bin/</filename> contient le script
      <filename>mvn</filename>
      <indexterm>
        <primary>mvn script</primary>
      </indexterm>qui permet l'exécution de Maven. Dans
      <filename>boot/</filename> se trouve le fichier JAR (
      <filename>classwords-1.1.jar</filename>) qui a pour charge de créer
      <indexterm>
        <primary>classwords-1.1.jar file</primary>
      </indexterm>le Class Loader dans lequel s'exécute Maven.
      <filename>conf/</filename> contient un
      <filename
    role="keep-together">settings.xml</filename> global qui permet
      <indexterm>
        <primary>settings.xml file</primary>
      </indexterm>de personnaliser le comportement d'une installation de Maven. Si vous devez personnaliser Maven, il est d'usage de surcharger les paramètres dans le fichier
      <filename>settings.xml</filename> qui se trouve dans
      <indexterm>
        <primary>m2 directory, contents of</primary>
      </indexterm>
      <filename>~/.m2</filename>.
      <filename>lib/</filename> contient un fichier JAR unique (
      <filename>maven-core-${maven.version}-uber.jar</filename>) qui contient le c&oelig;ur de Maven.
    </para>
    <note>
      <para>A moins que vous ne travailliez sur un système Unix partagé, vous ne devriez pas avoir à modifier le fichier
        <filename>settings.xml</filename> du répertoire
        <filename>M2_HOME/conf</filename>. Modifier le fichier
        <filename>settings.xml</filename> global dans l'installation de Maven est inutile dans la plupart des cas, et risque de rendre toute mise à jour de Maven plus compliquée, puisque vous aurez à vous rappeler de copier le fichier modifié
        <filename>settings.xml</filename> depuis votre ancienne installation de Maven dans la nouvelle. Si vous devez modifier le fichier
        <filename>settings.xml</filename>, vous devriez modifier le fichier
        <filename>settings.xml</filename> qui vous est propre dans
        <filename>~/.m2/settings.xml</filename>.
      </para>
    </note>
    <section id="installation-sect-user">
      <title>Configuration et Dépôt spécifiques à l'Utilisateur</title>
      <para>Une fois que vous avez commencé à réellement utiliser Maven, vous vous apercevrez que Maven a créé localement des fichiers de configuration spécifiques à l'utilisateur ainsi qu'un dépôt local dans votre répertoire utilisateur. Dans
        <filename>~/.m2</filename> vous trouverez :
      </para>
      <variablelist>
        <varlistentry>
          <term>~/.m2/settings.xml</term>
          <listitem>
            <para>Un fichier contenant la configuration propre à l'utilisateur, pour l'authentification, les dépôts, et les différentes informations nécessaires à la personnalisation du comportement de Maven. </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>~/.m2/repository/</term>
          <listitem>
            <para>Ce répertoire contient le dépôt local de Maven. Lorsque vous téléchargez une dépendance depuis un dépôt Maven distant, Maven enregistre une copie de cette dépendance dans votre dépôt local.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>Sous Unix (et OSX), votre répertoire utilisateur est symbolisé par un tilde (i.e.
          <filename>~/bin</filename> correspond au répertoire
          <filename>/home/tobrien/bin</filename>). Sous Windows, nous utiliserons aussi
          <filename>~</filename> pour symboliser votre répertoire utilisateur. Sous Windows XP, votre répertoire utilisateur est
          <filename>C:\Documents and Settings\tobrien</filename>, et sous Windows Vista, votre répertoire utilisateur est
          <filename>C:\Users\tobrien</filename>. À partir de maintenant, vous devrez traduire les chemins du type
          <filename>~/m2</filename> en fonction de votre système d'exploitation.
        </para>
      </note>
    </section>
    <section id="installation-sect-upgrade">
      <title>Mettre à jour une Installation de Maven</title>
      <para>Si vous avez installé Maven sur une machine sous Mac OSX ou sous Unix en suivant les instructions de
        la <xref lang="" linkend="installation-sect-maven-osx" /> et de
        la <xref linkend="installation-sect-maven-linux" />. L'installation de nouvelles versions de Maven devrait être simple. Installez tout simplement la nouvelle version de Maven (
        <filename>/usr/local/maven-2.future</filename>) à côté de l'installation existante (
        <filename>/usr/local/maven-${maven.version}</filename>). Puis modifiez le lien symbolique
        <filename>/usr/local/maven</filename> de
        <filename>/usr/local/maven-${maven.version}</filename> à
        <filename>/usr/local/maven-2.future</filename>. Comme vous avez déjà défini votre variable d'environnement
        <varname>M2_HOME</varname> pour qu'elle pointe sur
        <filename>/usr/local/maven</filename>, vous n'aurez pas à modifier la moindre variable d'environnement.
      </para>
      <para>Si vous avez installé Maven sur une machine sous Windows, décompressez Maven dans
        <filename>c:\Program Files\maven-2.future</filename> et mettez à jour votre variable d'environnement
        <varname>M2_HOME</varname>.
      </para>
      <note>
        <para>Si vous avez modifié le fichier global
          <filename>settings.xml</filename> de
          <filename>M2_HOME/conf</filename>, vous devrez copier le
          <filename>settings.xml</filename> dans le répertoire
          <filename>conf</filename> de la nouvelle installation de Maven.
        </para>
      </note>
    </section>
    <section id="installation-sect-upgrade-detail">
      <title>Migrer de Maven 1.x à Maven 2.x</title>
      <para>Si vous migrez de Maven 1 à Maven 2, vous allez utiliser un nouveau POM et une nouvelle structure de dépôt. Si vous avez déjà votre propre dépôt Maven 1 pour gérer vos artefacts, vous pouvez utiliser Nexus Repository Manager pour exposer un dépôt au format Maven 1 de manière à ce qu'il soit compris par des clients Maven 2. Pour plus d'informations sur le Nexus Repository Manager, nous vous encourageons à lire le livre <ulink url="http://www.sonatype.com/books/nexus-book/reference/">Repository Management with Nexus</ulink>. En plus d'outils comme Nexus, vous avez la possibilité de configurer des références à des dépôts utilisant la structure
        <varname>legacy</varname>. Pour plus d'informations sur la configuration de dépôt legacy, regardez la <xref linkend="appendix-settings-sect-settings-repository" />.
      </para>
      <para>Si vous avez tout un ensemble de projets Maven 1, le Maven One Plugin devrait vous intéresser. Le Maven One Plugin a été conçu pour faciliter la migration des projets de Maven 1 à Maven 2. Si vous avez un projet Maven 1, vous pouvez convertir son POM en exécutant le goal
        <varname>one:</varname>
        <varname>convert</varname> de la manière suivante:
      </para>
      <screen>$ cd my-project
$ mvn one:convert</screen>
      <para>
        <varname>one:</varname>
        <varname>convert</varname> va lire le fichier
        <filename>project.xml</filename> et produire un
        <filename>pom.xml</filename> compatible avec Maven 2. Si votre build Maven 1 a été personnalisé avec un script Jelly dans le fichier
        <filename>maven.xml</filename>, il va vous falloir tester d'autres options. Alors que Maven 1 préconisait l'utilisation de scripts Jelly pour personnaliser les builds, Maven 2 lui préconise la personnalisation au travers de plugins personnels, de plugins de script ou le Maven Antrun Plugin.
      </para>
      <para>Ce qu'il faut retenir lorsque l'on migre de Maven 1 à Maven 2, c'est que Maven 2 est un framework de build complètement différent. Maven 2 introduit le concept du Cycle de Vie Maven, et redéfinit les relations entre plugins. Si vous migrez de Maven 1 à Maven 2, vous devez passer du temps à apprendre les différences qui existent entre ces deux versions. Bien qu'il puisse sembler plus important de commencer par apprendre la nouvelle structure du POM, vous devriez commencer par le Cycle de Vie. Une fois le Cycle de Vie de Maven compris, vous pourrez utiliser toute la puissance de Maven. </para>
    </section>
  </section>
  <section id="installation-sect-uninstalling">
    <title>Désinstaller Maven</title>
    <para>La plupart des instructions d'installation demandent de décompresser l'archive de la distribution de Maven dans un répertoire, et de définir quelques variables d'environnement. Si vous devez supprimer Maven de votre ordinateur, tout ce que vous avez à faire est de supprimer le répertoire d'installation de Maven ainsi que les variables d'environnement. Vous voudrez sûrement supprimer le répertoire
      <filename>~/.m2</filename> qui contient votre dépôt local.
    </para>
  </section>
  <section id="installation-sect-getting-help">
    <title>Obtenir de l'Aide avec Maven</title>
    <para>Même si ce livre essaye de se rapprocher d’une référence compréhensible, nous oublierons certains sujets : nous ne couvrirons pas certaines situations particulières ainsi que certaines astuces. Le c&oelig;ur de Maven est très simple, cependant la véritable valeur ajoutée de Maven s'effectue par l'intermédiaire de ces plugins, et étant donné leur nombre nous n'arriverons pas à tous les couvrir en un seul ouvrage. Vous allez rencontrer des problèmes et des fonctionnalités qui ne sont pas traités dans ce livre; dans ce cas, nous vous suggérons ces différents points pour y chercher vos réponses: </para>
    <variablelist>
      <varlistentry>
        <term>
          <ulink url="http://maven.apache.org">http://maven.apache.org</ulink>
        </term>
        <listitem>
          <para>C'est le premier endroit où chercher, le site web de Maven contient une grande quantité d'information et de documentation. Chaque plugin possède quelques pages de documentation, et il existe une série de documents "quick start" qui pourront vous servir de complément à ce livre. Bien que le site internet de Maven soit une véritable mine d'informations, il peut vite devenir frustrant d'autant qu'on s'y perd facilement. Il existe une boîte de recherche Google sur la page d'accueil du site qui va rechercher dans un ensemble de sites reconnus sur Maven. Cela donne de meilleurs résultats qu'une recherche Google classique. </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>La Liste de Diffusion des Utilisateurs de Maven</term>
        <listitem>
          <para>La liste de diffusion Maven Users est l'endroit où les utilisateurs peuvent poser leurs questions. Avant de poser votre question sur cette liste de diffusion, recherchez toute discussion antérieure qui pourrait avoir un rapport avec votre question. En effet, il est mal vu de poser une question qui a déjà été posée sans avoir vérifié auparavant les archives pour voir si quelqu'un y avait déjà répondu. Il y a un certain nombre de sites très utiles pour parcourir les archives des listes de diffusion. Nous avons pour notre part trouvé Nabble très pratique. Vous pouvez parcourir les archives de la liste de diffusion des utilisateurs ici :
            <ulink
          url="http://www.nabble.com/Maven---Users-f178.html">http://www.nabble.com/Maven---Users-f178.html
            </ulink>. Vous pouvez vous abonner à cette liste de diffusion en suivant les instructions disponibles ici:
            <ulink
          url="http://maven.apache.org/mail-lists.html">http://maven.apache.org/mail-lists.html
            </ulink>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <ulink url="http://www.sonatype.com">http://www.sonatype.com</ulink>
        </term>
        <listitem>
          <para>Sonatype maintient une version en ligne de ce livre ainsi que des formations autour d'Apache Maven.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <note>
      <para>Malgré les efforts de nombreux contributeurs dévoués de Maven, le site internet de Maven est mal organisé et plein de  bouts de documentation incomplets (voir parfois incorrects). Partout dans la communauté Maven on sent un manque de standards pour la documentation des plugins, certains plugins ont une documentation très détaillée alors que d'autres n'ont même pas les instructions minimales pour les utiliser. Souvent, votre meilleure chance réside dans une recherche des archives de la liste de diffusion des utilisateurs.  Si vous voulez contribuer, il vous est possible de soumettre un patch sur le site de Maven (ou sur ce livre). </para>
    </note>
  </section>
  <section id="installation-sect-help-plugin-install">
    <title>Utiliser le Maven Help Plugin</title>
    <para>Tout au long de ce livre, nous allons introduire des plugins Maven, parler de fichiers Maven Project Object Model (<acronym>POM</acronym>), de fichiers de settings, et de profils. Parfois vous aurez besoin d'un outil qui vous permettra de connaître les modèles utilisés par Maven et les goals disponibles pour un plugin donné. Le plugin Maven Help vous permet de lister tous les profils Maven actifs, d'afficher un <acronym>POM</acronym> effectif, les settings effectifs, ou les attributs d'un plugin Maven.
    </para>
    <note>
      <para>Pour une vision plus conceptuelle du POM et des plugins, lisez le <xref linkend="simple-project" xrefstyle="style:title" />.
      </para>
    </note>
    <para>Le plugin Maven Help a quatre goals. Les trois premiers goals&mdash; 
      <varname>active-profiles</varname>,
      <varname>effective-pom</varname>, et
      <varname>effective-settings</varname>&mdash;décrivent un projet particulier et doivent être exécutés depuis le répertoire racine d'un projet. Le dernier goal&mdash;
      <varname>describe</varname>&mdash;est un peu plus complexe, il affiche des informations sur un plugin ou le goal d'un plugin. Les commandes suivantes vous donnent des informations générales sur ces quatre goals:
    </para>
    <variablelist>
      <varlistentry>
        <term>help:active-profiles</term>
        <listitem>
          <para>Liste les profils (du projet, de l'utilisateur, globaux) qui sont actifs pour le build. </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>help:effective-pom</term>
        <listitem>
          <para>Affiche le
            <acronym>POM</acronym> effectif pour le build en cours, en prenant en compte les profils activés.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>help:effective-settings</term>
        <listitem>
          <para>Affiche la configuration calculée des settings pour le projet, en prenant en compte la configuration de l'utilisateur et les modifications apportées par les profils actifs. </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>help:describe</term>
        <listitem>
          <para>Décrit les attributs d'un plugin. Il n'est pas nécessaire de l'exécuter dans le répertoire d'un projet. Vous devez fournir au moins le
            <varname>groupId</varname> et le
            <varname>artifactId</varname> du plugin dont vous voulez la description.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <section id="installation-sect-describing-plugin">
      <title>Décrire un Plugin Maven</title>
      <para>Une fois que vous commencez à utiliser Maven, vous passerez le plus clair de votre temps à rechercher des informations sur les Plugins Maven: Comment fonctionnent les plugins ? Quels sont les paramètres de configuration ? Quels sont les goals ? Vous utiliserez fréquemment le goal
        <varname>help:</varname>
        <varname>describe</varname> pour obtenir ce type d'information. Le paramètre
        <varname>plugin</varname> vous permet de spécifier le plugin sur lequel vous voulez des informations, en passant son préfixe (par exemple
        <varname>maven-help-plugin</varname> ou
        <varname>help</varname>) ou son nom complet
        <varname>groupId:</varname>
        <varname>artifact[:</varname>
        <varname>version]</varname>, la version étant optionnelle Par exemple, la commande suivante utilise le goal
        <varname>describe</varname> du plugin Help pour afficher des informations sur le plugin Maven Help.
      </para>
      <screen>$<command>mvn help:describe -Dplugin=help</command>
...
Group Id:  org.apache.maven.plugins
Artifact Id: maven-help-plugin
Version:     2.0.1
Goal Prefix: help
Description:

The Maven Help plugin provides goals aimed at helping to make sense out of
    the build environment. It includes the ability to view the effective
    POM and settings files, after inheritance and active profiles
    have been applied, as well as a describe a particular plugin goal to give 
    usage information.
...</screen>
      <para>L'exécution du goal
        <varname>describe</varname> en passant le paramètre
        <varname>plugin</varname> a affiché les coordonnées Maven du plugin, le préfixe du goal et une description succincte du plugin. Même si ces informations sont utiles, habituellement on voudra en savoir un peu plus. Pour afficher la liste des goals avec leurs paramètres grâce au plugin Help, il faut exécuter le goal
        <varname>help:</varname>
        <varname>describe</varname> avec le paramètre
        <varname>full</varname> comme ci-dessous:
      </para>
      <screen>$<command>mvn help:describe -Dplugin=help -Dfull</command>
...
Group Id:  org.apache.maven.plugins
Artifact Id: maven-help-plugin
Version:     2.0.1
Goal Prefix: help
Description:

The Maven Help plugin provides goals aimed at helping to make sense out of
    the build environment. It includes the ability to view the effective
    POM and settings files, after inheritance and active profiles
    have been applied, as well as a describe a particular plugin goal to 
    give usage information.

Mojos:

===============================================
Goal: 'active-profiles'
===============================================
Description:

Lists the profiles which are currently active for this build.

Implementation: org.apache.maven.plugins.help.ActiveProfilesMojo
Language: java

Parameters:
-----------------------------------------------

[0] Name: output
Type: java.io.File
Required: false
Directly editable: true
Description:

This is an optional parameter for a file destination for the output of 
this mojo...the listing of active profiles per project.

-----------------------------------------------

[1] Name: projects
Type: java.util.List
Required: true
Directly editable: false
Description:

This is the list of projects currently slated to be built by Maven.

-----------------------------------------------

This mojo doesn't have any component requirements.
===============================================

... removed the other goals ...</screen>
      <para>Cette option est fort utile pour découvrir un plugin, tous ses goals et leurs paramètres. Mais parfois on veut encore plus d'informations. Pour obtenir les informations sur un unique goal, renseignez le paramètre
        <varname>mojo</varname> en plus du paramètre
        <varname>plugin</varname>. La commande suivante liste l'ensemble des informations sur le goal
        <varname>compile</varname> du plugin Compiler.
      </para>
      <screen>$<command>mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull</command></screen>
      <note>
        <para>Quoi ? Un Mojo ? Chez Maven, le goal d'un Plugin s'appelle un "Mojo".</para>
      </note>
    </section>
  </section>
  <section id="installation-sect-license">
    <title>À propos de l'Apache Software License</title>
    <para>Apache Maven est sous Apache Software License, Version 2.0. Si vous voulez lire cette licence, vous la trouverez dans
      <filename>\${M2_HOME}/LICENSE.txt</filename> ou sur le site internet de l'Open Source Initiative ici
      <ulink
    url="http://www.opensource.org/licenses/apache2.0.php">http://www.opensource.org/licenses/apache2.0.php
      </ulink>.
    </para>
    <para>Il y a une forte probabilité, si vous lisez ce livre, que vous ne soyez pas un homme de loi. Si vous vous demandez ce que signifie Apache License, Version 2.0, l'Apache Software Foundation a écrit une Foire Aux Questions (FAQ) très utile sur cette licence ici
      <ulink
    url="http://www.apache.org/foundation/licence-FAQ.html">http://www.apache.org/foundation/licence-FAQ.html
      </ulink>. Voici la réponse à la question "Je ne suis pas un homme de loi. Que cela signifie t'il ?"
    </para>
    <para>
      <blockquote>
        <para>
          <emphasis>[Cette licence] vous autorise à:</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para>télécharger et utiliser librement tout ou partie d'un logiciel Apache, dans un but personnel, interne à une entreprise ou commercial;</para>
          </listitem>
          <listitem>
            <para>utiliser un logiciel Apache dans les packages ou les distributions que vous créez.</para>
          </listitem>
        </itemizedlist>
        <para>
          <emphasis>Elle vous interdit de:</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para>redistribuer n'importe quelle partie d'un logiciel Apache en se l'attribuant;</para>
          </listitem>
          <listitem>
            <para>utiliser les marques appartenant à l'Apache Software Foundation de manière à laisser entendre que la  Foundation approuve votre distribution;</para>
          </listitem>
          <listitem>
            <para>utiliser les marques de l'Apache Software Foundation de manière à laisser entendre que vous avez créé le logiciel Apache en question.</para>
          </listitem>
        </itemizedlist>
        <para>
          <emphasis>Elle vous demande:</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para>d'inclure une copie de la licence avec chaque redistribution qui contient un logiciel Apache;</para>
          </listitem>
          <listitem>
            <para>d'attribuer clairement à l'Apache Software Foundation toute distribution qui contient un logiciel Apache.</para>
          </listitem>
        </itemizedlist>
        <para>
          <emphasis>Elle ne vous demande pas:</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para>d'inclure le code source du logiciel Apache lui-même, ou toute modification que vous pourriez lui avoir apportées, dans vos distributions qui le contiennent;</para>
          </listitem>
          <listitem>
            <para>de donner à l'Apache Software Foundation toute modification que vous auriez pu faire du logiciel (même si de tels retours sont appréciés).</para>
          </listitem>
        </itemizedlist>
      </blockquote>
    </para>
    <para>Ceci clôt le chapitre sur l'installation. La suite du livre contient des exemples d'utilisation de Maven.</para>
  </section>
</chapter>
